<template>
  <div class="contact-card">
    <div class="contacts__header contact-info">
      <span class="title">О контакте</span>
    </div>
    <div class="add-contact__main main-info">
      <div
        class="main-info__icon"
        :style="{ 'background-color': selectedContact.iconColor }"
      >
        {{ contactAbbr(firstName, secondName) }}
      </div>
      <form class="main-info__create-form" @submit.prevent="saveChanges">
        <div class="input-fields">
          <div class="input-fields__field-info">
            <label>{{ selectedContact.firstName.title }}</label>
            <input v-model="firstName" type="text" placeholder="Имя" />
          </div>
          <div class="input-fields__field-info">
            <label>{{ selectedContact.secondName.title }}</label>
            <input v-model="secondName" type="text" placeholder="Фамилия" />
          </div>
          <div class="input-fields__field-info">
            <label>{{ selectedContact.phoneNumber.title }}</label>
            <input
              v-model.trim="phoneNumber"
              type="number"
              placeholder="Мобильный телефон"
            />
          </div>

          <custom-input />
        </div>

        <span
          class="input-fields__add-field-btn"
          :class="{ 'input-fields__add-btn-disabled': isFieldAdded }"
          >добавить поле</span
        >

        <div class="input-fields__buttons">
          <button class="main-info__submit" type="submit">Сохранить</button>
          <router-link to="/">
            <button class="main-info__submit" @click="nullifyContact">
              Отменить
            </button>
          </router-link>
        </div>
      </form>
    </div>
  </div>
</template>

// ----------------------------------------------- //

    selectedContactKeys() {
      return Object.keys(this.allContacts[this.selectedContact.idx]);
    },

    fieldValue() {
      const fieldValues = [];

      for (let i = 2; i < 5; i++) {
        const value = this.allContacts[this.selectedContact.idx][
          this.selectedContactKeys[i]
        ].value;

        fieldValues.push(value);
      }

      return fieldValues;
    }

    
    fieldTitle(index) {
      if (this.selectedContactKeys[index]) {
        return this.allContacts[this.selectedContact.idx][
          this.selectedContactKeys[index]
        ].title;
      }
    }

    //fieldValue() {
    //  const index = 2;

    //  if (this.selectedContactKeys[index]) {
    //    return this.allContacts[this.selectedContact.idx][
    //      this.selectedContactKeys[index]
    //    ].value;
    //  }
    //}


// ------------------------------- //
  //&__icon {
  //  position: absolute;
  //  top: 8px;
  //  right: -17px;

  //  font-size: 1.1rem;
  //  color: #777777;
  //  cursor: pointer;
  //  user-select: none;

  //  &:hover {
  //    color: rgb(145, 145, 145);
  //  }
  //}

  //.field-options {
  //  position: absolute;
  //  top: -8px;
  //  right: -145px;
  //  padding: 5px 10px;
  //  display: flex;
  //  flex-direction: column;
  //  justify-content: space-between;
  //  border-radius: 5px;
  //  background-color: #6f96ed;

  //  .btn {
  //    color: #fff;
  //    cursor: pointer;
  //  }

  //  &__add-button {
  //    &:hover {
  //      color: rgb(99, 236, 133);
  //    }
  //  }

  //  &__delete-button {
  //    &:hover {
  //      color: rgb(233, 120, 120);
  //    }
  //  }
  //}

  //.field-options-top-1 {
  //  top: 1px;
  //}



      <!--<span
      class="material-icons custom-fields__icon"
      @click="showOptions = !showOptions"
    >
      more_vert
    </span>-->
    <!--<div
      class="field-options"
      :class="{ 'field-options-top-1': !showCreateBtn }"
      v-if="showOptions"
    >
      <span
        class="btn field-options__add-button"
        v-if="showCreateBtn"
        @click="create"
      >
        Создать поле
      </span>
      <span class="btn field-options__delete-button" @click="handleDelete">
        Удалить поле
      </span>
    </div>-->


    // --------------------- // 

    

    //create() {
    //  this.createField(this.fieldData);
    //  this.showCreateBtn = this.showOptions = false;

    //  this.$emit("field-created");
    //},
    //handleDelete() {
    //  this.deleteField(this.fieldData);
    //  this.showOptions = false;
    //}